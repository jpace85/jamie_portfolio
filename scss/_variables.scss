//COLORS
$clr-light: #fff;
$clr-dark: #1A2238;
$clr-accent: #F4DB7D;
$clr-accent2: #FF6A3D;
$clr-accent3: #9DAAF2;



$bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25),
0.125em 0.125em 0.25em rgba(0,0,0,.15);

//TYPOGRAPHY

/*Font Names*/
$ff-primary: 'Source Sans Pro', sans-serif;
$ff-secondary: 'Work Sans', monospace;

/*Heading Sizes*/
$fs-h1: 3rem;
$fs-h2: 2.25rem;
$fs-h3: 1.25rem;
$fs-body: 1rem;

/*Heading Sizes for Tablets and larger*/
@media (min-width: 768px) {
    :root {
        $fs-h1: 4.5rem;
        $fs-h2: 3.75rem;
        $fs-h3: 1.5rem;
        $fs-body: 1.125rem;
    }
}

/*Font Weights*/
$font-weights: (
    "regular": 300,
    "bold": 900
);

//SCREEN SIZES
$breakpoints: (
  'small-phone': ( min-width:  425px ),
  'large-phone': ( min-width:  768px ),
  'tablet':  ( min-width: 992px ),
  'desktop':  ( min-width: 1200px ),
) !default;

@mixin respond-to($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media #{inspect(map-get($breakpoints, $breakpoint))} {
        @content;
      }
    }
   
    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
  }
